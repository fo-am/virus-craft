;; -*- mode: scheme; -*-
;; Viruscraft Copyright (C) 2018 FoAM Kernow

(define virus-name "")
(define virus (make-virus (list)))
(define scores-list (list))
(define hiscores-display (list))
(define save-button #f)

(define (make-stats-mode name scores) 
  (list name scores #f))

(define (stats-mode-name m) (list-ref m 0))
(define (stats-mode-scores m) (list-ref m 1))
(define (stats-mode-finished? m) (list-ref m 2))
(define (stats-mode-modify-finished m v) (list-replace m 2 v))

(define current-score-position -1)
(define exhib-restart-timer 20)

(define (get-score-position score scores)
  (foldl
   (lambda (s r)
     (if (> s score) (+ r 1) r))
   0
   scores))

(define (render-stats-hiscores g)
  (set! ctx.font "25pt Dosis")
  (ctx.fillText "Top 15 viruses (by age)" 40 350)   
  (set! ctx.font "15pt Dosis")
  (let ((displayed #f)
	(age (scores-age (play-mode-scores g))))
    (index-for-each
     (lambda (i hiscore)
       (let ((score (list-ref hiscore 2))
	     (y (+ 390 (* (if displayed (+ i 1) i) 20))))
	 (when (and (not displayed) (< score age))
	       (set! ctx.fillStyle "#f00")
	       (set! displayed #t)
	       (set! y (+ y 20))
	       (ctx.fillText (string-append (car hiscore) ": " (play-mode-virus-name g) " virus " 
					    (trunc age))
			     40 (+ 390 (* i 30))))
	 (set! ctx.fillStyle "#000")
	 (ctx.fillText (+ (if displayed (+ (car hiscore) 1) (car hiscore)) ": " (list-ref hiscore 1) " virus " (trunc score))
		       40 y)))
     (chop-front 15 hiscores-display))))


(define (init-stats-mode name scores)
  (set! exhib-restart-timer 10)  
  (clear-popups!)

  (set! back-button 
	(make-image-button (- screen-width 100) 650 "hexbutton.png"
			   "Restart" 0 "spin"
			   (lambda (m)
			     (destroy-virus-builder)
			     (stats-mode-modify-finished m #t))))

  ;; (set! save-button 
  ;; 	(make-image-button (- screen-width 300) 650 "hexbutton.png"
  ;; 			   "Save your score" -20 "spin"
  ;; 			   (lambda (g)			     
  ;; 			     (fire-popup! "good" (list "Virus saved!"))		    
  ;; 			     (server-call-ret
  ;; 			      "record-virus"
  ;; 			      (list (list "virus-id" current-virus-id)
  ;; 				    (list "age" (scores-age (stats-mode-scores g)))
  ;; 				    (list "infections" (scores-infections (stats-mode-scores g)))
  ;; 				    (list "deaths" (scores-deaths (stats-mode-scores g)))
  ;; 				    (list "jumps" (scores-jumps (stats-mode-scores g))))
  ;; 			      (lambda (data)			     
  ;; 				(server-call-ret
  ;; 				 "hiscores" (list) 
  ;; 				 (lambda (data)
  ;; 				   (set! hiscores-display (JSON.parse data))))
				
  ;; 				)))))
  
  ;; (server-call-ret
  ;;  "scores" (list) 
  ;;  (lambda (data)
  ;;    (set! scores-list (JSON.parse data))
  ;;    (set! current-score-position 
  ;; 	   (get-score-position 
  ;; 	    (scores-age (stats-mode-scores g)) scores-list))))

  (server-call-ret
   "hiscores" (list) 
   (lambda (data)
     (set! hiscores-display (JSON.parse data))))
  
  (make-stats-mode name scores))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(define (stats-mode-update g)
  (set! exhib-restart-timer (- exhib-restart-timer canvas-delta))
  ;; (image-button-update save-button g)
  (image-button-update back-button
		       (cond
			((and exhib-version (< exhib-restart-timer 0))
			 (destroy-virus-builder)
			 (stats-mode-modify-finished g #t))
			(else g))))

(define (stats-mode-render g)
  (with-primitive 
   virus-builder
   (identity)
   (translate (vector 4.5 0 0))
   ;;(translate builder-pos) 
   (rotate (vector 0 (* -30 (time)) 0))
   (scale (vector 2.7 2.7 2.7))
   (concat (q->m virus-q))))

(define (stats-mode-canvas-render g)
  (set! ctx.font "40pt Dosis")
  (ctx.fillText (string-append "You created: ") 40 80)
  (set! ctx.fillStyle infect-colour-hex)
  (set! ctx.font "40pt Dosis")
  (ctx.fillText (string-append (stats-mode-name g) " virus") 310 80)
  (set! ctx.font "25pt Dosis")
  (set! ctx.fillStyle "#000")
  (ctx.fillText (string-append "You survived " (trunc (scores-age (stats-mode-scores g))) " days") 40 130)
  
  (let ((infections (scores-infections (stats-mode-scores g)))
	(deaths (scores-deaths (stats-mode-scores g)))
	(jumps (scores-jumps (stats-mode-scores g)))) 
    (ctx.fillText (string-append "Infected " infections (if (eq? infections 1) " creature" " creatures")) 40 170)
    (ctx.fillText (string-append "Caused " deaths (if (eq? deaths 1) " death" " deaths")) 40 210)
    (ctx.fillText (string-append "Jumped species " jumps (if (eq? jumps 1) " time" " times")) 40 250))
  (ctx.fillText (string-append "High scores position " (+ current-score-position 1)) 40 290)

  (when (not exhib-version)
	;;(image-button-render! save-button)
	(image-button-render! back-button))
  
  (render-stats-hiscores g)
  (render-popups!)
  ;;(render-transmission-highlight! g)
  ;;(render-info! g)
  )

