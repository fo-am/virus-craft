;; -*- mode: scheme; -*-
;; Viruscraft Copyright (C) 2018 FoAM Kernow

(define infection-rate 10)
(define world-zoom 0)
(define virus (make-virus (list)))

(define (make-play-mode population organisms score hi-score world-units world-pos-checker) 
  (list population organisms score hi-score world-units world-pos-checker #f))

(define (play-mode-population m) (list-ref m 0))
(define (play-mode-modify-population m v) (list-replace m 0 v))
(define (play-mode-organisms m) (list-ref m 1))
(define (play-mode-modify-organisms m v) (list-replace m 1 v))
(define (play-mode-score m) (list-ref m 2))
(define (play-mode-modify-score m v) (list-replace m 2 v))
(define (play-mode-hi-score m) (list-ref m 3))
(define (play-mode-modify-hi-score m v) (list-replace m 3 v))
(define (play-mode-world-units m) (list-ref m 4))
(define (play-mode-world-pos-checker m) (list-ref m 5))
(define (play-mode-modify-world-pos-checker m v) (list-replace m 5 v))
(define (play-mode-finished? m) (list-ref m 6))
(define (play-mode-modify-finished m v) (list-replace m 6 v))

(define title-text '())
(define infect-window '())
(define deaths-window '())
(define age-window '())
(define back-button '())

(define (init-play-mode)
  (set! back-button 
	(make-image-button (- screen-width 100) 570 "hexbutton.png"
			   "End" 
			   (lambda (m)
			     (msg "hello")
			     (destroy-virus-builder)
			     (destroy world-root)
			  
			     (play-mode-modify-finished m #t))))

  (set! title-text 
	(make-textbox 
	 300 70
	 "50pt Dosis" 30 "centre"
	 (list "Evolve your virus")))

  (set! infect-window (make-window 20 500 180 160))
  (set! deaths-window (make-window 210 500 180 160))
  (set! age-window (make-window 400 500 180 160))
  
  (let ((wpc (build-world-position-checker world-units)))
    (build-virus-builder)
    (host-organism-load-models)
    
    (make-play-mode
     (population-infect 
      (make-random-population 50 wpc) 
      virus infection-rate)
     '() 0 0 world-units wpc)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(define death-count 0)

(define (play-mode-update g)
  (virus-builder-update-buttons buttons)
  
  ;; keep track of deaths
  (set! death-count 
  	(foldl
  	 (lambda (host r)
  	   (if (and (not (host-alive? host))
  		    (host-infected? host))
  	       (+ r 1) r))
  	 death-count
  	 (play-mode-population g)))
  
  (image-button-update 
   back-button
   (cond
    ;; no hosts!
    ((zero? (length (play-mode-population g)))
     (fire-popup! (list "The hosts all died out!"))
     (make-play-mode
      (population-infect 
       (make-random-population 50 (play-mode-world-pos-checker g)) 
       virus infection-rate)
      '() 0 (play-mode-hi-score g)
      (play-mode-world-units g)
      (play-mode-world-pos-checker g)))

    ;; no infections
    ((zero? (population-num-infected (play-mode-population g)))
     (when (> (play-mode-score g) 100)
	   (fire-popup! (list "Your virus died out!")))
     (set! death-count 0)
     (make-play-mode
      (population-infect 
       (play-mode-population g)
       virus infection-rate)
      (update-organisms 
       (play-mode-organisms g)
       (play-mode-population g)
       (play-mode-world-units g))
      0 (play-mode-hi-score g)
      (play-mode-world-units g)
      (play-mode-world-pos-checker g)))

    ;; normal
    (else
     (make-play-mode
      (population-update 
       (play-mode-population g) 
       virus
       (play-mode-world-pos-checker g))
      (update-organisms 
       (play-mode-organisms g)
       (play-mode-population g)
       (play-mode-world-units g))
      (+ (play-mode-score g) 1)
      (if (> (play-mode-score g) (play-mode-hi-score g))
	  (play-mode-score g)
	  (play-mode-hi-score g)) 
      (play-mode-world-units g)
      (play-mode-world-pos-checker g))))))

(define (play-mode-render g)
  (with-primitive 
   virus-builder
   (identity)
   (translate builder-pos) 
   ;;(rotate (vector 80 0 -25))
   (scale (vector 2 2 2))
   (concat (q->m virus-q)))

  (with-primitive 
   world-root 
   (identity)
   (translate (vector 5 0 0))
   (let ((s (+ (min (max 0.02 (* canvas-mouse-zoom 0.02)) 2) 0.7)))
     (scale (vector s s s)))
   (concat (q->m world-q))))

(define (play-mode-canvas-render g)
  (textbox-render! title-text)
  (image-button-render! back-button)
  (window-render! infect-window)
  (window-render! deaths-window)
  (window-render! age-window)

  (set! infect-window (make-window 20 500 180 160))
  (set! deaths-window (make-window 210 500 180 160))
  (set! age-window (make-window 400 500 180 160))

  (ctx.fillText (+ "infected: " (population-num-infected (play-mode-population g))) 50 550)
  (ctx.fillText (+ "deaths: " death-count) 250 550)
  (ctx.fillText (+ "score: " (play-mode-score g)) 450 550)

  (render-popups!))

